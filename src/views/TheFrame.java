// David Emery

package views;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import models.*;

public class TheFrame extends javax.swing.JFrame {
  
  // ============================== info textarea
  public void setInfoText(String text) {
    this.description.setText(text);
    this.description.setCaretPosition(0);
  }
  public void setInfoSize(Dimension d) {
    description.getParent().setPreferredSize(d);
    description.getParent().setMinimumSize(d);
  }
  
  
  //=============================== add menu item
  public void addAddMovieActionListener(ActionListener listener) {
    this.addMovie.addActionListener(listener);
  }
  
  
  
  //=============================== modifyDescription menu item
  public void addModifyDescriptionActionListener(ActionListener listener) {
    this.modifyDescription.addActionListener(listener);
  }
  public void setModDescriptionEnabled(boolean enabled) {
    this.modifyDescription.setEnabled(enabled);
  }
  
  
  
  //=============================== addActor menu item
  public void addAddActorActionListener(ActionListener listener) {
    this.addActor.addActionListener(listener);
  }
  
  
  //=============================== removeActor menu item
  public void addRemoveActorActionListener(ActionListener listener) {
    this.removeActor.addActionListener(listener);
  }
  public void setRemoveActorEnabled(boolean enabled) {
    this.removeActor.setEnabled(enabled);
  }
  
  
  //=============================== addActorToMovie menu item
  public void addAddActorToMovieActionListener(ActionListener listener) {
    this.addActorToMovie.addActionListener(listener);
  }
  public void setAddActorToMovieEnabled(boolean enabled) {
    this.addActorToMovie.setEnabled(enabled);
  }
  
  
  //=============================== removeActorFromMovie menu item
  public void addRemoveActorFromMovieActionListener(ActionListener listener) {
    this.removeActorFromMovie.addActionListener(listener);
  }
  public void setRemoveActorFromMovieEnabled(boolean enabled) {
    this.removeActorFromMovie.setEnabled(enabled);
  }
  
  
  //=============================== Actors list
  public void setActorsModel(ListModel model) {
    actors.setModel(model);
  }
  public void addActorsListSelectionListener(ListSelectionListener listener) {
    actors.addListSelectionListener(listener);
  }
  public Actor getSelectedActor() {
    return (Actor) actors.getSelectedValue();
  }
  public void setActorsSize(Dimension d) {
    actors.getParent().setPreferredSize(d);
    actors.getParent().setMinimumSize(d);
  }
  public void clearActorSelection(){
      actors.clearSelection();
  }
  
 
  // Deselect Actors Cutton =======================================
  public void addDeselectActorsActionListener(ActionListener listener){
      this.deselectActors.addActionListener(listener);
      
  }
  
  
  
  //=============================== Movies list
  public void setMoviesModel(ListModel model) {
    books.setModel(model);
  }
  public void addMoviesListSelectionListener(ListSelectionListener listener) {
    books.addListSelectionListener(listener);
  }
  public Movie getSelectedMovie() {
    return (Movie) books.getSelectedValue();
  }
  public void setMoviesSize(Dimension d) {
    books.getParent().setPreferredSize(d);
    books.getParent().setMinimumSize(d);
  }
  public void clearMoviesSelection() {
    books.clearSelection();
  }
  public void setMoviesCellRenderer(ListCellRenderer renderer) {
    books.setCellRenderer(renderer);
  }

  
  
  
  //=============================== MovieActors list
  public void setMovieActorsModel(ListModel model) {
    movieActors.setModel(model);
  }
  public void addMovieActorsListSelectionListener(ListSelectionListener listener) {
    movieActors.addListSelectionListener(listener);
  }
  public Movie getSelectedMovieActor() {
    return (Movie) movieActors.getSelectedValue();
  }
  public void setMovieActorsSize(Dimension d) {
    movieActors.getParent().setPreferredSize(d);
    movieActors.getParent().setMinimumSize(d);
  }
  public void clearMovieActorsSelection() {
    movieActors.clearSelection();
  }
  public void setMovieActorsCellRenderer(ListCellRenderer renderer) {
    movieActors.setCellRenderer(renderer);
  }
  
  
  
  
  
  
  /**
   * Creates new form Frame
   */
  public TheFrame() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        actors = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        books = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        movieActors = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        deselectActors = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        addMovie = new javax.swing.JMenuItem();
        modifyDescription = new javax.swing.JMenuItem();
        addActor = new javax.swing.JMenuItem();
        removeActor = new javax.swing.JMenuItem();
        addActorToMovie = new javax.swing.JMenuItem();
        removeActorFromMovie = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Actors");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Movies");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jLabel2, gridBagConstraints);

        actors.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        actors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actorsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(actors);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 4);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        books.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(books);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 6);
        getContentPane().add(jScrollPane2, gridBagConstraints);

        jLabel3.setText("Movie Actors List");
        getContentPane().add(jLabel3, new java.awt.GridBagConstraints());

        movieActors.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(movieActors);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 6);
        getContentPane().add(jScrollPane4, gridBagConstraints);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Description:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        deselectActors.setText("Deselect Actors");
        jPanel1.add(deselectActors, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, -1, -1));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanel1, gridBagConstraints);

        description.setRows(5);
        jScrollPane3.setViewportView(description);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jScrollPane3, gridBagConstraints);

        jMenu1.setText("File");

        addMovie.setText("Add Movie");
        addMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovieActionPerformed(evt);
            }
        });
        jMenu1.add(addMovie);

        modifyDescription.setText("Modify Movie Description");
        modifyDescription.setEnabled(false);
        jMenu1.add(modifyDescription);

        addActor.setText("Add Actor");
        jMenu1.add(addActor);

        removeActor.setText("Remove Actor");
        removeActor.setEnabled(false);
        jMenu1.add(removeActor);

        addActorToMovie.setText("Add Actor to Movie");
        addActorToMovie.setEnabled(false);
        jMenu1.add(addActorToMovie);

        removeActorFromMovie.setText("Remove Actor from Movie");
        removeActorFromMovie.setEnabled(false);
        jMenu1.add(removeActorFromMovie);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void addMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMovieActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_addMovieActionPerformed

    private void actorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actorsMouseClicked
        // TODO add your handling code here:
        
//        actors.clearSelection();
        
        
    }//GEN-LAST:event_actorsMouseClicked

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(TheFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(TheFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(TheFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(TheFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new TheFrame().setVisible(true);
      }
    });
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList actors;
    private javax.swing.JMenuItem addActor;
    private javax.swing.JMenuItem addActorToMovie;
    private javax.swing.JMenuItem addMovie;
    private javax.swing.JList books;
    private javax.swing.JTextArea description;
    private javax.swing.JButton deselectActors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenuItem modifyDescription;
    private javax.swing.JList movieActors;
    private javax.swing.JMenuItem removeActor;
    private javax.swing.JMenuItem removeActorFromMovie;
    // End of variables declaration//GEN-END:variables
}
